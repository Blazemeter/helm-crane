apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: {{ .Values.matches.role }}
  name: {{ .Release.name }}crane
  namespace: {{ .Values.deployment.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      role: {{ .Values.matches.role }}
      crane: {{ .Values.matches.crane }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        role: {{ .Values.matches.role }}
        crane: {{ .Values.matches.crane }}
    spec:
      serviceAccountName: {{ template "blazemeter-crane.serviceAccountName" . }}
      automountServiceAccountToken: true
      containers:
      - env:
        - name: AUTH_TOKEN
          value: {{ .Values.env.authtoken }}
        - name: HARBOR_ID
          value: {{ .Values.env.harbour_id }}
        - name: SHIP_ID
          value: {{ .Values.env.ship_id }}
        - name: CONTAINER_MANAGER_TYPE
          value: KUBERNETES
        - name: IMAGE_OVERRIDES
          value: '{}'
        - name: DOCKER_REGISTRY
          value: {{ .Values.env.docker_regirstry }}
        - name: AUTO_KUBERNETES_UPDATE
          value: {{ .Values.env.auto_update }}
        {{- if .Values.proxy.use -}}
          {{ if .Values.proxy.http_proxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy.http_path }}
          {{- end -}}
          {{ if .Values.proxy.https_proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy.https_path }}
          {{- end }}
        - name: NO_PROXY
          value: {{ .Values.proxy.no_proxy }}
        {{- end -}}
        {{ if .Values.ca_bundle.use }}
        - name: REQUEST_CA_BUNDLE
          value: {{ .Values.volume.mount_path }}/{{ .Values.ca_bundle.ca_subpath }}
        - name: AWS_CA_BUNDLE
          value: {{ .Values.volume.mount_path }}/{{ .Values.ca_bundle.aws_subpath }}
        - name: KUBERNETES_CA_BUNDLE_MOUNT
          value: REQUESTS_CA_BUNDLE={{ .Release.Name }}-configmap=certificate.crt:AWS_CA_BUNDLE={{ .Release.Name }}-configmap=certificate.crt
        {{- end -}}
        {{ if .Values.istio_ingress.use }}
        - name: KUBERNETES_WEB_EXPOSE_TYPE
          value: ISTIO
        - name: KUBERNETES_WEB_EXPOSE_SUB_DOMAIN
          value: {{ .Values.istio_ingress.web_expose_subdomain }}
        - name: KUBERNETES_WEB_EXPOSE_TLS_SECRET_NAME
          value: {{ .Values.istio_ingress.credentialName }}
        - name: KUBERNETES_SERVICE_USE_TYPE
          value: CLUSTERIP
        - name: KUBERNETES_USE_PRE_PULLING
          value: {{ .Values.istio_ingress.pre_pulling }}
        - name: KUBERNETES_SERVICES_BLOCKING_GET
          value: "true"
        - name: KUBERNETES_ISTIO_GATEWAY_NAME
          value: {{ .Values.istio_ingress.istio_gateway_name }}
        {{ end }}
        {{ if .Values.non_privilege_container.use }}
        - name: INHERIT_RUNNING_USER_AND_GROUP
          value: 'true'
        {{- end -}}
        image: {{ .Values.env.image }}
        imagePullPolicy: {{ .Values.env.pullPolicy }}
        name: crane-container
        {{ if .Values.ca_bundle.use }}
        volumeMounts:
        - name: {{ .Values.volume.volume_name }}
          mountPath: {{ .Values.volume.mount_path }}
      volumes:
      - name: {{ .Values.volume.volume_name }}
        configMap:
          name: {{ .Release.Name }}-configmap
        {{ end }}   
        {{- if .Values.non_privilege_container.use -}}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: {{ .Values.non_privilege_container.runAsGroup }}   
          runAsUser: {{ .Values.non_privilege_container.runAsUser }}        
        {{ end }}
      restartPolicy: {{ .Values.restartPolicy }}
      terminationGracePeriodSeconds: 30