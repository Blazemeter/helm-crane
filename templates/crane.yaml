apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: {{ .Values.matches.role }}
  name: {{ .Release.name }}crane
  namespace: {{ .Values.deployment.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      role: {{ .Values.matches.role }}
      crane: {{ .Values.matches.crane }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        role: {{ .Values.matches.role }}
        crane: {{ .Values.matches.crane }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: crane
                operator: In
                values:
                - {{ .Values.matches.crane }}
            topologyKey: topology.kubernetes.io/zone

      serviceAccountName: {{ template "blazemeter-crane.serviceAccountName" . }}
      automountServiceAccountToken: true
      containers:
      - env:
        - name: AUTH_TOKEN
          value: {{ .Values.env.authtoken }}
        - name: HARBOR_ID
          value: {{ .Values.env.harbour_id }}
        - name: SHIP_ID
          value: {{ .Values.env.ship_id }}
        - name: CONTAINER_MANAGER_TYPE
          value: KUBERNETES
        - name: IMAGE_OVERRIDES
          value: '{}'
        - name: DOCKER_REGISTRY
          value: {{ .Values.env.docker_regirstry }}
        - name: AUTO_KUBERNETES_UPDATE
          value: {{ .Values.env.auto_update }}
          {{- if .Values.proxy.use -}}
            {{ if .Values.proxy.http_proxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy.http_path }}
            {{- end -}}
            {{ if .Values.proxy.https_proxy }}    
        - name: HTTP_PROXY  
          value: {{ .Values.proxy.https_path }} 
            {{- end }}
        - name: NO_PROXY
          values: {{ .Values.proxy.no_proxy }}
          {{- end }}
        
        volumeMounts:
        - name: config-volume
          mountPath: /var/cm

        - name: REQUEST_CA_BUNDLE
          values: /var/cm/where.crt
        - name: AWS_CA_BUNDLE
          values: /var/cm/where-else.crt
        - name: KUBERNETES_CA_BUNDLE_MOUNT=REQUESTS_CA_BUNDLE
          values: REQUESTS_CA_BUNDLE=cert-config=where.crt:AWS_CA_BUNDLE=cert-config=where-else.crt

        image: {{ .Values.env.image }} 
        imagePullPolicy: {{ .Values.env.pullPolicy }}
        name: crane-container

      volumes:
      - name: config-volume
        configMap:
        # Provide the name of the ConfigMap containing the files you wantto add to the container
          name: cert-config
        
      restartPolicy: {{ .Values.restartPolicy }}
      terminationGracePeriodSeconds: 30