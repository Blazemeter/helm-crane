apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.matches.role }}
  namespace: {{ .Values.deployment.namespace }}
rules:
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
- apiGroups: ["extensions", "apps", ""] # leave empty string for core
  resources: ["pods", "services", "endpoints", "daemonsets", "pods/*", "pods/exec", "deployments", "replicasets", "ingresses", "deployments/scale"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection", "createcollection"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.matches.role }}-binding-{{ .Values.deployment.namespace }}-{{ template "blazemeter-crane.serviceAccountName" . }}
  namespace: {{ .Values.deployment.namespace }}
subjects:
- kind: ServiceAccount
  name: {{ template "blazemeter-crane.serviceAccountName" . }}
  namespace: {{ .Values.deployment.namespace }}
roleRef:
  kind: Role 
  name: {{ .Values.matches.role }}
  apiGroup: rbac.authorization.k8s.io

---
# Only for istio config
{{ if .Values.istio_ingress.use }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.istio_ingress.roleName }}
  namespace: {{ .Values.deployment.namespace }}
rules:
  - apiGroups: ["networking.istio.io"]
    resources: ["destinationrules", "virtualservices", "gateways"]
    verbs: ["get", "list", "create", "delete", "patch", "update"]

---
# This will bind the "role-crane-istio" role to the "default" service account in the given namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: 
  name: role-binding-crane-istio 
  namespace: {{ .Values.deployment.namespace }}
roleRef:
- apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.istio_ingress.roleName }}
subjects: 
- kind: ServiceAccount
  name: {{ template "blazemeter-crane.serviceAccountName" . }}
   namespace: {{ .Values.deployment.namespace }}
{{ end }}